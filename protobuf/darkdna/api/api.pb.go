// Code generated by protoc-gen-go.
// source: darkdna/api/api.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	darkdna/api/api.proto

It has these top-level messages:
	Error
	SecurityRule
	ApiRule
	CodesRule
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type ExtendedFormat int32

const (
	// Specifies that this is a Unix Timestamp. Only applies to int64 object types.
	ExtendedFormat_TIMESTAMP ExtendedFormat = 0
)

var ExtendedFormat_name = map[int32]string{
	0: "TIMESTAMP",
}
var ExtendedFormat_value = map[string]int32{
	"TIMESTAMP": 0,
}

func (x ExtendedFormat) String() string {
	return proto.EnumName(ExtendedFormat_name, int32(x))
}
func (ExtendedFormat) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// The error message that is the error of the message.
type Error struct {
	// The actual error message itself.
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Code  int32  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SecurityRule struct {
	Scopes           []string `protobuf:"bytes,1,rep,name=scopes" json:"scopes,omitempty"`
	PermissionGroups []string `protobuf:"bytes,2,rep,name=permissionGroups" json:"permissionGroups,omitempty"`
}

func (m *SecurityRule) Reset()                    { *m = SecurityRule{} }
func (m *SecurityRule) String() string            { return proto.CompactTextString(m) }
func (*SecurityRule) ProtoMessage()               {}
func (*SecurityRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ApiRule struct {
	Title    string        `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Version  string        `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Name     string        `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Security *SecurityRule `protobuf:"bytes,6,opt,name=security" json:"security,omitempty"`
}

func (m *ApiRule) Reset()                    { *m = ApiRule{} }
func (m *ApiRule) String() string            { return proto.CompactTextString(m) }
func (*ApiRule) ProtoMessage()               {}
func (*ApiRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ApiRule) GetSecurity() *SecurityRule {
	if m != nil {
		return m.Security
	}
	return nil
}

type CodesRule struct {
	Okay     string `protobuf:"bytes,1,opt,name=okay" json:"okay,omitempty"`
	NotFound string `protobuf:"bytes,2,opt,name=not_found" json:"not_found,omitempty"`
}

func (m *CodesRule) Reset()                    { *m = CodesRule{} }
func (m *CodesRule) String() string            { return proto.CompactTextString(m) }
func (*CodesRule) ProtoMessage()               {}
func (*CodesRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

var E_Info = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FileOptions)(nil),
	ExtensionType: (*ApiRule)(nil),
	Field:         28307350,
	Name:          "darkdna.api.info",
	Tag:           "bytes,28307350,opt,name=info",
}

var E_Description = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         28307347,
	Name:          "darkdna.api.description",
	Tag:           "bytes,28307347,opt,name=description",
}

var E_Security = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*SecurityRule)(nil),
	Field:         28307354,
	Name:          "darkdna.api.security",
	Tag:           "bytes,28307354,opt,name=security",
}

var E_Tags = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: ([]string)(nil),
	Field:         28307348,
	Name:          "darkdna.api.tags",
	Tag:           "bytes,28307348,rep,name=tags",
}

var E_Summary = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         28307349,
	Name:          "darkdna.api.summary",
	Tag:           "bytes,28307349,opt,name=summary",
}

var E_Codes = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*CodesRule)(nil),
	Field:         28307351,
	Name:          "darkdna.api.codes",
	Tag:           "bytes,28307351,opt,name=codes",
}

var E_Scopes = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: ([]string)(nil),
	Field:         28307352,
	Name:          "darkdna.api.scopes",
	Tag:           "bytes,28307352,rep,name=scopes",
}

var E_Format = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*ExtendedFormat)(nil),
	Field:         28307353,
	Name:          "darkdna.api.format",
	Tag:           "varint,28307353,opt,name=format,enum=darkdna.api.ExtendedFormat",
}

func init() {
	proto.RegisterType((*Error)(nil), "darkdna.api.Error")
	proto.RegisterType((*SecurityRule)(nil), "darkdna.api.SecurityRule")
	proto.RegisterType((*ApiRule)(nil), "darkdna.api.ApiRule")
	proto.RegisterType((*CodesRule)(nil), "darkdna.api.CodesRule")
	proto.RegisterEnum("darkdna.api.ExtendedFormat", ExtendedFormat_name, ExtendedFormat_value)
	proto.RegisterExtension(E_Info)
	proto.RegisterExtension(E_Description)
	proto.RegisterExtension(E_Security)
	proto.RegisterExtension(E_Tags)
	proto.RegisterExtension(E_Summary)
	proto.RegisterExtension(E_Codes)
	proto.RegisterExtension(E_Scopes)
	proto.RegisterExtension(E_Format)
}

var fileDescriptor0 = []byte{
	// 445 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x29, 0x8d, 0x13, 0x3c, 0x69, 0x43, 0xb1, 0x00, 0x99, 0xef, 0x2a, 0xe2, 0x80, 0x00,
	0x39, 0x22, 0x48, 0x08, 0xf9, 0x56, 0xaa, 0x14, 0x38, 0x04, 0x10, 0xed, 0x89, 0x0b, 0xda, 0x66,
	0x27, 0x61, 0x55, 0xdb, 0xb3, 0xda, 0x5d, 0x23, 0xfa, 0x1c, 0x7c, 0xf3, 0x32, 0x3c, 0x0a, 0xaf,
	0xc2, 0x7a, 0xed, 0x2d, 0xb5, 0x00, 0xf9, 0x60, 0xc9, 0x3b, 0x3b, 0xf3, 0xff, 0xfd, 0x77, 0x66,
	0xe0, 0x12, 0x67, 0xea, 0x88, 0x17, 0x6c, 0xc2, 0xa4, 0xa8, 0xbe, 0x44, 0x2a, 0x32, 0x14, 0x0d,
	0x9b, 0x70, 0x62, 0x43, 0x57, 0xb7, 0x57, 0x44, 0xab, 0x0c, 0x27, 0xee, 0xea, 0xb0, 0x5c, 0x4e,
	0x38, 0xea, 0x85, 0x12, 0xd2, 0x90, 0xaa, 0xd3, 0xc7, 0xb7, 0x21, 0x98, 0x29, 0x45, 0x2a, 0xda,
	0x84, 0x00, 0xab, 0x9f, 0x78, 0x6d, 0x7b, 0xed, 0x4e, 0x18, 0x6d, 0x40, 0x6f, 0x41, 0x1c, 0xe3,
	0xb3, 0xf6, 0x14, 0x8c, 0x1f, 0xc3, 0xc6, 0x3e, 0x2e, 0x4a, 0x25, 0xcc, 0xf1, 0xeb, 0x32, 0xc3,
	0x68, 0x04, 0x7d, 0xbd, 0x20, 0x89, 0xda, 0x66, 0xaf, 0xdb, 0xec, 0x18, 0xb6, 0x24, 0xaa, 0x5c,
	0x68, 0x2d, 0xa8, 0x78, 0xaa, 0xa8, 0x94, 0xda, 0x56, 0xda, 0x9b, 0x31, 0x87, 0xc1, 0x8e, 0x14,
	0xae, 0xc8, 0x12, 0x8c, 0x30, 0x19, 0x36, 0x84, 0xf3, 0x30, 0x78, 0x8f, 0xaa, 0x2a, 0x70, 0x10,
	0x87, 0x2c, 0x58, 0x8e, 0x71, 0xe0, 0x4e, 0xf7, 0xe0, 0x9c, 0x6e, 0x90, 0x71, 0xdf, 0x46, 0x86,
	0xd3, 0x2b, 0xc9, 0xa9, 0xa7, 0x25, 0xa7, 0xfd, 0x8c, 0xef, 0x43, 0xb8, 0x6b, 0xdd, 0x6a, 0xc7,
	0xb1, 0x3a, 0x74, 0xc4, 0x8e, 0x1b, 0xcc, 0x05, 0x08, 0x0b, 0x32, 0x6f, 0x97, 0x54, 0x16, 0xbc,
	0x06, 0xdd, 0xbd, 0x05, 0xa3, 0xd9, 0x07, 0x83, 0x05, 0x47, 0xbe, 0x47, 0x2a, 0x67, 0xc6, 0x5a,
	0x0b, 0x0f, 0x9e, 0xcf, 0x67, 0xfb, 0x07, 0x3b, 0xf3, 0x57, 0x5b, 0x67, 0xd2, 0x5d, 0xe8, 0x89,
	0x62, 0x49, 0xd1, 0xf5, 0xa4, 0xee, 0x5f, 0xe2, 0xfb, 0x97, 0xec, 0x89, 0x0c, 0x5f, 0x4a, 0x63,
	0x4d, 0xeb, 0xf8, 0xcb, 0xaf, 0x9f, 0x9b, 0xce, 0xd8, 0xc5, 0x96, 0xb1, 0xe6, 0xb9, 0xe9, 0x23,
	0x18, 0xfa, 0x6e, 0xdb, 0xf4, 0xe8, 0xe6, 0x5f, 0x5a, 0x73, 0x34, 0xef, 0x88, 0x7b, 0xb5, 0x8f,
	0xb5, 0x5a, 0x98, 0xbe, 0xf8, 0xf3, 0xf0, 0xce, 0xa2, 0x1f, 0xde, 0xc2, 0xff, 0x7b, 0x93, 0x4e,
	0xa0, 0x67, 0xd8, 0x4a, 0x77, 0x6a, 0x7d, 0xaa, 0xb4, 0xec, 0xc8, 0xd2, 0x29, 0x0c, 0x74, 0x99,
	0xe7, 0x4c, 0x75, 0xf3, 0x3f, 0x7b, 0xd3, 0xcf, 0x20, 0xa8, 0xd6, 0xa5, 0x9b, 0xf2, 0xd5, 0x3b,
	0xbe, 0xdc, 0x72, 0x7c, 0x32, 0xbd, 0xf4, 0x81, 0x5f, 0xad, 0x4e, 0xa9, 0x6f, 0xde, 0xf0, 0x1c,
	0xfa, 0xcb, 0x7a, 0x8e, 0x37, 0xfe, 0x31, 0x30, 0xcc, 0x4e, 0x2a, 0xbe, 0xd7, 0xf0, 0xd1, 0xf4,
	0x5a, 0x0b, 0xde, 0x5e, 0x86, 0x27, 0xc1, 0x9b, 0x75, 0x1b, 0x3d, 0xec, 0x3b, 0x8d, 0x87, 0xbf,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x71, 0x25, 0x43, 0x9d, 0x68, 0x03, 0x00, 0x00,
}

// Code generated by protoc-gen-go.
// source: darkdna/api/api.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	darkdna/api/api.proto

It has these top-level messages:
	Error
	ApiRule
	CodesRule
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// The error message that is the error of the message.
type Error struct {
	// The actual error message itself.
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ApiRule struct {
	Title   string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	BaseUri string `protobuf:"bytes,3,opt,name=base_uri" json:"base_uri,omitempty"`
	Host    string `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
}

func (m *ApiRule) Reset()                    { *m = ApiRule{} }
func (m *ApiRule) String() string            { return proto.CompactTextString(m) }
func (*ApiRule) ProtoMessage()               {}
func (*ApiRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CodesRule struct {
	Okay     string `protobuf:"bytes,1,opt,name=okay" json:"okay,omitempty"`
	NotFound string `protobuf:"bytes,2,opt,name=not_found" json:"not_found,omitempty"`
}

func (m *CodesRule) Reset()                    { *m = CodesRule{} }
func (m *CodesRule) String() string            { return proto.CompactTextString(m) }
func (*CodesRule) ProtoMessage()               {}
func (*CodesRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

var E_Info = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FileOptions)(nil),
	ExtensionType: (*ApiRule)(nil),
	Field:         28307350,
	Name:          "darkdna.api.info",
	Tag:           "bytes,28307350,opt,name=info",
}

var E_Description = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         28307347,
	Name:          "darkdna.api.description",
	Tag:           "bytes,28307347,opt,name=description",
}

var E_Tags = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: ([]string)(nil),
	Field:         28307348,
	Name:          "darkdna.api.tags",
	Tag:           "bytes,28307348,rep,name=tags",
}

var E_Summary = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         28307349,
	Name:          "darkdna.api.summary",
	Tag:           "bytes,28307349,opt,name=summary",
}

var E_Codes = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*CodesRule)(nil),
	Field:         28307351,
	Name:          "darkdna.api.codes",
	Tag:           "bytes,28307351,opt,name=codes",
}

var E_Scopes = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: ([]string)(nil),
	Field:         28307352,
	Name:          "darkdna.api.scopes",
	Tag:           "bytes,28307352,rep,name=scopes",
}

func init() {
	proto.RegisterType((*Error)(nil), "darkdna.api.Error")
	proto.RegisterType((*ApiRule)(nil), "darkdna.api.ApiRule")
	proto.RegisterType((*CodesRule)(nil), "darkdna.api.CodesRule")
	proto.RegisterExtension(E_Info)
	proto.RegisterExtension(E_Description)
	proto.RegisterExtension(E_Tags)
	proto.RegisterExtension(E_Summary)
	proto.RegisterExtension(E_Codes)
	proto.RegisterExtension(E_Scopes)
}

var fileDescriptor0 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x90, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0xe9, 0xd7, 0xa4, 0xfd, 0x72, 0x6b, 0x51, 0x83, 0x96, 0x20, 0x22, 0xa5, 0x2b, 0x17,
	0x32, 0xc1, 0x0a, 0x2e, 0xb2, 0xd3, 0xa2, 0xe8, 0x42, 0x04, 0x97, 0x6e, 0xca, 0xb4, 0x99, 0xb6,
	0x43, 0xd3, 0xdc, 0x61, 0x66, 0x22, 0xf4, 0x39, 0xfc, 0xfb, 0x36, 0x3e, 0x8a, 0xaf, 0xe2, 0x64,
	0x92, 0x88, 0xe2, 0x22, 0x2e, 0x02, 0xe1, 0xde, 0x73, 0x7e, 0xf7, 0x9c, 0x81, 0xdd, 0x98, 0xca,
	0x65, 0x9c, 0xd2, 0x90, 0x0a, 0x9e, 0x7f, 0x44, 0x48, 0xd4, 0xe8, 0x77, 0xca, 0x31, 0x31, 0xa3,
	0xbd, 0xfe, 0x1c, 0x71, 0x9e, 0xb0, 0xd0, 0xae, 0x26, 0xd9, 0x2c, 0x8c, 0x99, 0x9a, 0x4a, 0x2e,
	0x34, 0xca, 0x42, 0x3e, 0xe8, 0x81, 0x7b, 0x21, 0x25, 0x4a, 0xbf, 0x0b, 0x2e, 0xcb, 0x7f, 0x82,
	0x46, 0xbf, 0x71, 0xe8, 0x0d, 0xae, 0xa1, 0x7d, 0x26, 0xf8, 0x5d, 0x96, 0xb0, 0x7c, 0xa3, 0xb9,
	0x4e, 0x58, 0xb1, 0xf1, 0x37, 0xa1, 0xfd, 0xc0, 0xa4, 0xe2, 0x98, 0x06, 0xff, 0xec, 0x60, 0x0b,
	0xfe, 0x4f, 0xa8, 0x62, 0xe3, 0x4c, 0xf2, 0xa0, 0x69, 0x27, 0x1b, 0xe0, 0x2c, 0x50, 0xe9, 0xc0,
	0xb1, 0xa8, 0x23, 0xf0, 0x46, 0x68, 0x0e, 0x5b, 0x98, 0x59, 0xe1, 0x92, 0xae, 0x4b, 0xd6, 0x36,
	0x78, 0x29, 0xea, 0xf1, 0x0c, 0xb3, 0x34, 0x2e, 0x68, 0xd1, 0x08, 0x1c, 0x9e, 0xce, 0xd0, 0xdf,
	0x27, 0x45, 0x76, 0x52, 0x65, 0x27, 0x97, 0x3c, 0x61, 0xb7, 0x42, 0x9b, 0xc3, 0x2a, 0x78, 0xf9,
	0x78, 0xef, 0x1a, 0x79, 0x67, 0xb8, 0x43, 0xbe, 0xf5, 0x25, 0x65, 0xe4, 0xe8, 0x14, 0x3a, 0x55,
	0x53, 0x23, 0xf7, 0x0f, 0x7e, 0xb1, 0x6e, 0x98, 0x5e, 0x60, 0x5c, 0xd1, 0x1e, 0x0b, 0x9a, 0x17,
	0x85, 0xe0, 0x68, 0x3a, 0x57, 0xb5, 0x86, 0xa7, 0xdc, 0xd0, 0x34, 0x86, 0x21, 0xb4, 0x55, 0xb6,
	0x5a, 0x51, 0xb9, 0xae, 0xf5, 0x3c, 0x57, 0x47, 0xae, 0xc0, 0x9d, 0xe6, 0xef, 0x51, 0xeb, 0x78,
	0xad, 0x4a, 0xf6, 0x7e, 0x94, 0xfc, 0x7a, 0xcc, 0xe8, 0x18, 0x5a, 0x6a, 0x8a, 0xe2, 0x0f, 0xa8,
	0xb7, 0x32, 0xf0, 0xb9, 0x7b, 0xdf, 0x34, 0x8c, 0x49, 0xcb, 0xea, 0x4e, 0x3e, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x50, 0x7d, 0xab, 0x46, 0x45, 0x02, 0x00, 0x00,
}
